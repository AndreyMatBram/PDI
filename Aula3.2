import numpy as np
from PIL import Image
import matplotlib.pyplot as plt


def main():
    # Open image
    img_pillow = Image.open("./Src/images/lena_salt_pepper.tif")
    f_img_ndarray = np.array(img_pillow)

    # Operação por vizinhança
    lines, columns = f_img_ndarray.shape
    kernel_size = 1

    # Cria uma matriz de zeros com o mesmo tamanho da imagem
    median_img = np.zeros((lines, columns), dtype=np.uint8)
    mean_img = np.zeros((lines, columns), dtype=np.uint8)

    # Percorre a imagem
    for x in range(kernel_size, lines - kernel_size):
        for y in range(kernel_size, columns - kernel_size):
            s_xy = f_img_ndarray[
                x - kernel_size : x + kernel_size + 1,
                y - kernel_size : y + kernel_size + 1,
            ]

            # Calcula a média da vizinhança
            median_img[x, y] = np.median(s_xy).astype(np.uint8)

    for x in range(kernel_size, lines - kernel_size):
        for y in range(kernel_size, columns - kernel_size):
            s_xy = f_img_ndarray[
                x - kernel_size : x + kernel_size + 1,
                y - kernel_size : y + kernel_size + 1,
            ]

            # Calcula a média da vizinhança
            mean_img[x, y] = np.mean(s_xy).astype(np.uint8)

    # add subplots
    fig = plt.figure()
    plt1 = fig.add_subplot(1, 3, 1)
    plt2 = fig.add_subplot(1, 3, 2)
    plt3 = fig.add_subplot(1, 3, 3)

    # set titles
    plt1.set_title("Original Image")
    plt2.set_title("Mean Image")
    plt3.set_title("Median Image")

    # plot the images
    plt1.imshow(f_img_ndarray, cmap="gray")
    plt2.imshow(mean_img, cmap="gray", vmin=0, vmax=255)
    plt3.imshow(median_img, cmap="gray", vmin=0, vmax=255)
    plt.show()


if __name__ == "__main__":
    main()
